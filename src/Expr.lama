
import List;
import State;

public fun evalO(op, l, r)
{
    case op of
		  "+" -> l + r 
		| "-" -> l - r 
		| "*" -> l * r 
		| "/" -> l / r 
		| "%" -> l % r
		| "==" -> l == r 
		| "!=" -> l != r 
		| "<" -> l < r 
		| ">" -> l > r 
		| "<=" -> l <= r 
		| ">=" -> l >= r 
		| "&&" -> l && r 
		| "!!" -> l !! r
    esac
}

public fun evalExpr (st, expr) {
	case expr of
		   Const (z)	-> z
		|  Var (x)	-> st(x)
		| Binop (op, l, r) -> evalO(op, evalExpr(st, l), evalExpr(st, r))
	esac
}